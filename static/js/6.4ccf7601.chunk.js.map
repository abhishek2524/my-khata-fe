{"version":3,"sources":["components/Banks/BankHeader.jsx","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","assets/images/banks_logo/axis.png","assets/images/banks_logo/icici.png","assets/images/banks_logo/sbi.png","assets/images/banks_logo/syndicate.png","assets/images/banks_logo/canara.png","constants/bankLogo.js","components/Banks/BankCard.jsx","components/Banks/BankBody.jsx","components/Banks/AddBank.jsx","components/Banks/AccountStatus.jsx","components/Banks/index.jsx","components/common/Button/index.jsx","apihandler/APICall.js","components/common/Notifier/index.jsx","components/common/modal/index.jsx","components/common/ConfirmModal/index.jsx","components/common/DateTime/index.jsx","components/common/SubHeader/index.jsx"],"names":["mapDispatchToProps","showModal","closeModal","connect","addUser","SubHeader","Button","onClick","icon","context","React","createContext","displayName","CardImg","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","bankLogo","1","axis","2","icici","3","sbi","4","canara","5","syndicate","accountType","id","banks","name","imgSrc","BankCard","data","bank","totalAmount","isActive","bankID","accountHolder","useRef","useState","boxRect","setBoxRect","set","current","getBoundingClientRect","useEffect","myRef","addEventListener","e","xPos","clientX","left","width","yPos","clientY","top","height","xOffset","dxNorm","Math","min","max","style","transform","removeEventListener","src","to","pathname","state","bankname","textTransform","onEdit","disabled","onDelete","setLoader","stopLoader","setInit","clearIsFetch","globalReducer","bankReducer","isLoading","fetchData","cardData","setcardData","noData","a","apiCall","getAPIInstance","get","response","getData","Row","length","map","bankDetail","index","Col","xs","sm","md","lg","xl","AddEditBank","msg","dispatch","useDispatch","isEdit","companyname","account","setAccount","handleBankfForm","event","preventDefault","editData","_id","companyID","put","bank_obj_id","setIsFetch","notifier","json","errResponse","post","companyName","Form","onSubmit","Group","Label","column","Control","type","placeholder","onChange","prev","target","size","AccountStatus","deleteData","deleteAccount","setDeleteData","closeConfirmModal","aria-hidden","setConfirmModal","isConfirm","setIsEdit","setEditData","updateData","ConfirmModal","show","Container","fluid","Buttons","rest","apiInstance","APICall","url","fetch","process","method","headers","JSON","stringify","ok","responseJSON","Promise","resolve","reject","header","Headers","delete","color","toLowerCase","toastr","success","error","ModalCompnent","title","onHide","closeButton","DateTime","date","Date","toLocaleDateString","time","toLocaleTimeString","dateTime","setDateTime","dateInterval","setInterval","clearInterval","isHamBurActive","setIsHamBurActive","window","screen","Screen","setScreen"],"mappings":"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","file":"static/js/6.4ccf7601.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Buttons from \"../common/Button\";\nimport SubHeader from \"../common/SubHeader\";\nimport { showModal, closeModal } from \"./../../reducers/globalReducer\";\n\nfunction BankHeader({ addUser, showModal, ...rest }) {\n  return (\n    <SubHeader>\n      <Buttons onClick={addUser} icon={\"fa fa-plus\"}>\n        Add Bank\n      </Buttons>\n    </SubHeader>\n  );\n}\n\nconst mapDispatchToProps = { showModal, closeModal };\nexport default connect(null, mapDispatchToProps)(BankHeader);\n","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","export default __webpack_public_path__ + \"static/media/axis.b40725ff.png\";","export default __webpack_public_path__ + \"static/media/icici.ff197871.png\";","export default __webpack_public_path__ + \"static/media/sbi.c35f85fb.png\";","export default __webpack_public_path__ + \"static/media/syndicate.21a6835f.png\";","export default __webpack_public_path__ + \"static/media/canara.08e89d18.png\";","import axis from \"./../assets/images/banks_logo/axis.png\";\nimport icici from \"./../assets/images/banks_logo/icici.png\";\nimport sbi from \"./../assets/images/banks_logo/sbi.png\";\nimport syndicate from \"./../assets/images/banks_logo/syndicate.png\";\nimport canara from \"./../assets/images/banks_logo/canara.png\";\nexport const bankLogo = {\n  1: [axis, \"axis\"],\n  2: [icici, \"icici\"],\n  3: [sbi, \"sbi\"],\n  4: [canara, \"canara\"],\n  5: [syndicate, \"syndicate\"],\n};\nexport const accountType = [\n  {\n    id: \"Salary\",\n    value: \"Salary\",\n  },\n  {\n    id: \"Savings\",\n    value: \"Savings\",\n  },\n];\nexport const banks = [\n  {\n    id: 1,\n    name: \"Axis Bank\",\n    imgSrc: axis,\n    className: \"axis\",\n  },\n  {\n    id: 2,\n    name: \"ICICI Bank\",\n    imgSrc: icici,\n    className: \"icici\",\n  },\n  {\n    id: 3,\n    name: \"SBI Bank\",\n    imgSrc: sbi,\n    className: \"sbi\",\n  },\n  {\n    id: 4,\n    name: \"Canara Bank\",\n    imgSrc: canara,\n    className: \"canara\",\n  },\n  {\n    id: 5,\n    name: \"Syndicate Bank\",\n    imgSrc: syndicate,\n    className: \"syndicate\",\n  },\n];\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Buttons from \"../common/Button\";\n\n// import axis from \"./../../assets/images/banks_logo/axis.png\";\nimport { bankLogo } from \"./../../constants/bankLogo\";\n\nfunction BankCard(props) {\n  const { bank, totalAmount, isActive, bankID, accountHolder, accountType } =\n    props.data;\n  const ref = useRef();\n  const [boxRect, setBoxRect] = useState({});\n\n  const set = () =>\n    setBoxRect(ref && ref.current ? ref.current.getBoundingClientRect() : {});\n\n  useEffect(() => {\n    set();\n    const myRef = ref.current;\n    if (myRef) {\n      myRef.addEventListener(\"mousemove\", (e) => {\n        const xPos = (e.clientX - boxRect.left) / boxRect.width;\n        const yPos = (e.clientY - boxRect.top) / boxRect.height - 0.6;\n        const xOffset = -(xPos - 0.6);\n        const dxNorm = Math.min(Math.max(xOffset, -0.6), 0.6);\n        myRef.style.transform = `perspective(50px)\n          rotateY(${dxNorm * 4}deg)\n          rotateY(${xPos * 0}deg)\n          rotateX(${dxNorm * 0}deg)\n          rotateX(${yPos * 0}deg)\n          `;\n      });\n      myRef.addEventListener(\"mouseleave\", () => {\n        myRef.style.transform = \"none\";\n      });\n    }\n    return () => {\n      if (myRef) {\n        myRef.removeEventListener(\"mousemove\", set);\n        myRef.removeEventListener(\"mouseleave\", set);\n      }\n    };\n  }, [boxRect.top]);\n\n  return (\n    <div className=\"bankCard\">\n      <Card\n        style={{ width: \"100%\" }}\n        className={`bg-${bankLogo[bank][1]}`}\n        ref={ref}\n      >\n        <Card.Img variant=\"top\" src={bankLogo[bank][0]} />\n        <Card.Body>\n          <Link\n            to={{\n              pathname: `/account-detail/${bankID}`,\n              state: {\n                isActive,\n                accountHolder,\n                bankname: bankLogo[bank][1],\n                accountType,\n              },\n            }}\n          >\n            <Card.Title\n              style={{ textTransform: \"capitalize\" }}\n            >{`${accountHolder}`}</Card.Title>\n          </Link>\n          <Card.Text>{`Rs.${totalAmount}/-`}</Card.Text>\n        </Card.Body>\n        <Card.Footer className=\"text-muted\">\n          <div className=\"bank-actions\">\n            <Buttons\n              className=\"del\"\n              variant=\"info\"\n              onClick={() => props.onEdit(props.data)}\n              icon={\"fa fa-edit\"}\n              disabled={!props.data.isActive}\n            >\n              Edit\n            </Buttons>\n            <Buttons\n              className=\"edit\"\n              variant={props.data.isActive ? \"danger\" : \"primary\"}\n              onClick={() => props.onDelete(props.data)}\n              icon={props.data.isActive ? \"fa fa-trash\" : \"fa fa-check\"}\n            >\n              {props.data.isActive ? \"Deactivate\" : \"Activate\"}\n            </Buttons>\n          </div>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n\nexport default BankCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport BankCard from \"./BankCard\";\nimport { connect } from \"react-redux\";\nimport { setLoader, stopLoader, setInit } from \"./../../reducers/globalReducer\";\nimport { clearIsFetch } from \"./../../reducers/bankReducer\";\nimport { getAPIInstance } from \"./../../apihandler/APICall\";\n\nconst BankBody = (props) => {\n  const {\n    globalReducer,\n    bankReducer,\n    clearIsFetch,\n    setLoader,\n    stopLoader,\n    setInit,\n  } = props;\n  const { isLoading } = globalReducer;\n  const { fetchData } = bankReducer;\n  const [cardData, setcardData] = useState([]);\n  const noData = (\n    <span>\n      <i className=\"fas fa-money-check\"></i>No Bank Found.Please Add Bank Using\n      Add Bank Button.\n    </span>\n  );\n  useEffect(() => {\n    const getData = async () => {\n      setLoader(true);\n      const apiCall = new getAPIInstance();\n      const response = await apiCall.get(\"user\");\n      stopLoader(true);\n      clearIsFetch();\n      setcardData(response.data);\n    };\n    getData();\n    return () => {\n      setInit();\n      clearIsFetch();\n    };\n  }, [fetchData]);\n\n  return (\n    <div className=\"bankBodyDiv\">\n      <Row>\n        {isLoading ? null : cardData && cardData.length > 0 ? (\n          cardData.map((bankDetail, index) => {\n            return (\n              <Col\n                key={index}\n                className=\"col\"\n                xs={12}\n                sm={12}\n                md={4}\n                lg={4}\n                xl={4}\n              >\n                <BankCard\n                  data={bankDetail}\n                  onDelete={props.onDelete}\n                  onEdit={props.onEdit}\n                />\n              </Col>\n            );\n          })\n        ) : (\n          <div className={`no-data-div`}>{noData}</div>\n        )}\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ globalReducer, bankReducer }) => ({\n  globalReducer,\n  bankReducer,\n});\nconst mapDispatchToProps = {\n  setLoader,\n  stopLoader,\n  setInit,\n  clearIsFetch,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BankBody);\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport Buttons from \"../common/Button\";\nimport { getAPIInstance } from \"./../../apihandler/APICall\";\nimport { banks, accountType } from \"./../../constants/bankLogo\";\nimport { closeModal } from \"./../../reducers/globalReducer\";\nimport { setIsFetch } from \"./../../reducers/bankReducer\";\nimport { notifier } from \"../common/Notifier\";\n\nfunction AddEditBank(props) {\n  let msg = \"\";\n  const dispatch = useDispatch();\n  const { isEdit } = props;\n  const [account, setAccount] = useState({\n    bankID: \"\",\n    accountHolder: \"\",\n    accountType: \"\",\n    companyname: \"\",\n  });\n  const handleBankfForm = async (event) => {\n    event.preventDefault();\n    if (isEdit) {\n      try {\n        const { _id, bankID, companyID } = props.editData;\n        const apiCall = new getAPIInstance();\n        const response = await apiCall.put(\n          \"user\",\n          { ...account, bankID, bank_obj_id: account.bankID, companyID },\n          _id\n        );\n        msg = \"Account Updated Successfully\";\n        dispatch(closeModal());\n        dispatch(setIsFetch());\n        notifier(msg, \"Success\");\n      } catch (error) {\n        const errResponse = await error.json();\n        const msg = errResponse.msg;\n        notifier(msg, \"Error\");\n      }\n    } else {\n      try {\n        const apiCall = new getAPIInstance();\n        const response = await apiCall.post(\"user\", account);\n        msg = \"Account Created Successfully\";\n        dispatch(closeModal());\n        dispatch(setIsFetch());\n        notifier(msg, \"Success\");\n      } catch (error) {\n        const errResponse = await error.json();\n        const msg = errResponse.msg;\n        notifier(msg, \"Error\");\n      }\n    }\n  };\n  useEffect(() => {\n    if (props.isEdit) {\n      const { accountHolder, accountType, bank, companyName } = props.editData;\n      setAccount({\n        bankID: bank,\n        accountHolder,\n        accountType,\n        companyname: companyName,\n      });\n    } else {\n      setAccount({\n        bankID: \"1\",\n        accountHolder: \"\",\n        accountType: \"Savings\",\n        companyname: \"\",\n      });\n    }\n  }, []);\n  return (\n    <div className=\"bank-form\">\n      <Form onSubmit={handleBankfForm}>\n        {/* <Form.Group as={Row}>\n          <Form.Label column sm=\"12\">\n            Bank Name\n          </Form.Label>\n          <Col sm=\"12\">\n            <Form.Control\n              type=\"text\"\n              name=\"bankName\"\n              placeholder=\"Enter Bank Name\"\n              id=\"bankname\"\n              value={account.bankName}\n              onChange={(e) =>\n                setAccount((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                })\n              }\n            />\n          </Col>\n        </Form.Group> */}\n\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"12\">\n            Account Holder Name\n          </Form.Label>\n          <Col sm=\"12\" className=\"p-0 m-0\">\n            <Form.Control\n              type=\"text\"\n              name=\"accountHolder\"\n              id=\"accountHolder\"\n              placeholder=\"Enter Account Holder Name\"\n              value={account.accountHolder}\n              onChange={(e) =>\n                setAccount((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                })\n              }\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"12\">\n            Bank Name\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            size=\"md\"\n            name=\"bankID\"\n            placeholder=\"Enter Bank Name\"\n            id=\"bankID\"\n            value={account.bankID}\n            onChange={(e) =>\n              setAccount((prev) => {\n                return { ...prev, [e.target.name]: e.target.value };\n              })\n            }\n          >\n            {banks.map((bank, index) => {\n              return (\n                <option key={index} value={bank.id}>\n                  {bank.name}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"12\">\n            Account Type\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            size=\"md\"\n            name=\"accountType\"\n            id=\"accountType\"\n            value={account.accountType}\n            onChange={(e) =>\n              setAccount((prev) => {\n                return { ...prev, [e.target.name]: e.target.value };\n              })\n            }\n          >\n            {accountType.map((type, index) => {\n              return (\n                <option key={index} value={type.id}>\n                  {type.value}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        {account.accountType === \"Salary\" && (\n          <Form.Group as={Row}>\n            <Form.Label column sm={12}>\n              Company Name\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"companyname\"\n              id=\"companyname\"\n              value={account.companyname}\n              placeholder=\"Enter Company Name\"\n              onChange={(e) =>\n                setAccount((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                })\n              }\n            />\n          </Form.Group>\n        )}\n        <Buttons type=\"submit\" size=\"medium\">\n          {props.isEdit ? \"Edit\" : \"Add\"}\n        </Buttons>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddEditBank;\n","import React from \"react\";\nimport Buttons from \"../common/Button\";\nimport { bankLogo } from \"./../../constants/bankLogo\";\nfunction AccountStatus({\n  deleteData,\n  deleteAccount,\n  setDeleteData,\n  closeConfirmModal,\n}) {\n  return (\n    <div className=\"prompt\">\n      <pre>\n        {`Are you sure you want to ${\n          deleteData.isActive ? \"Deactive\" : \"Active\"\n        } -${deleteData.accountHolder}'s ${\n          bankLogo[deleteData.bank] && bankLogo[deleteData.bank][1]\n        } account`}\n      </pre>\n      <div>\n        <Buttons\n          className=\"mx-2\"\n          variant=\"danger\"\n          onClick={() => {\n            setDeleteData({});\n            closeConfirmModal();\n          }}\n        >\n          <i className=\"fa fa-times mx-1 text-light\" aria-hidden=\"true\" />\n          No\n        </Buttons>\n        <Buttons\n          className=\"mx-2\"\n          variant=\"primary\"\n          onClick={() => deleteAccount(deleteData._id, deleteData.isActive)}\n        >\n          <i className=\"fa fa-check mx-1 text-light\" aria-hidden=\"true\" />\n          Yes\n        </Buttons>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountStatus;\n","import React, { useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n// Reducers and API\nimport {\n  setConfirmModal,\n  closeConfirmModal,\n  showModal,\n  closeModal,\n} from \"./../../reducers/globalReducer\";\nimport { setIsFetch } from \"./../../reducers/bankReducer\";\nimport { getAPIInstance } from \"./../../apihandler/APICall\";\n// Components and scss\nimport \"./banks.scss\";\nimport Modal from \"./../common/modal\";\nimport ConfirmModal from \"../common/ConfirmModal\";\nimport BankHeader from \"./BankHeader\";\nimport BankBody from \"./BankBody\";\nimport { notifier } from \"../common/Notifier\";\nimport AddEditBank from \"./AddBank\";\nimport AccountStatus from \"./AccountStatus\";\n\nconst BankComponent = ({\n  bankReducer,\n  globalReducer,\n  showModal,\n  closeModal,\n  setConfirmModal,\n  closeConfirmModal,\n  setIsFetch,\n  ...rest\n}) => {\n  const { isConfirm } = globalReducer;\n  const [isEdit, setIsEdit] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [deleteData, setDeleteData] = useState({});\n  const onEdit = (data) => {\n    setIsEdit(true);\n    setEditData(data);\n    showModal();\n  };\n  const addUser = () => {\n    setIsEdit(false);\n    showModal();\n  };\n  const deleteUser = (data) => {\n    setDeleteData(data);\n    setConfirmModal(data);\n  };\n\n  const deleteAccount = async (_id, isActive) => {\n    try {\n      let msg = \"\";\n      const updateData = { isActive: !isActive };\n      const apiCall = new getAPIInstance();\n      const response = await apiCall.put(\"user\", updateData, _id);\n      msg = \"Account Updated Successfully\";\n      setIsFetch();\n      notifier(msg, \"Success\");\n      closeConfirmModal();\n    } catch (error) {\n      const errResponse = await error.json();\n      const msg = errResponse.msg;\n      notifier(msg, \"Error\");\n      closeConfirmModal();\n    }\n  };\n  return (\n    <>\n      <ConfirmModal show={isConfirm}>\n        <AccountStatus\n          setDeleteData={setDeleteData}\n          closeConfirmModal={closeConfirmModal}\n          deleteAccount={deleteAccount}\n          deleteData={deleteData}\n        />\n      </ConfirmModal>\n      <Modal>\n        <AddEditBank isEdit={isEdit} editData={editData} />\n      </Modal>\n      <Container fluid className=\"bankContainer\">\n        <Row className=\"sticky-header\">\n          <Col>\n            <BankHeader addUser={addUser} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <BankBody onEdit={onEdit} onDelete={deleteUser} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ bankReducer, globalReducer }) => ({\n  bankReducer,\n  globalReducer,\n});\nconst mapDispatchToProps = {\n  showModal,\n  closeModal,\n  closeConfirmModal,\n  setConfirmModal,\n  setIsFetch,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BankComponent);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport \"./button.scss\";\n\nconst Buttons = (props) => {\n  const { children, className, variant, icon, ...rest } = props;\n  return (\n    <Button\n      className={`${className} buttonDiv`}\n      disabled={props.disabled}\n      variant={variant}\n      {...rest}\n    >\n      {icon && (\n        <span>\n          <i className={icon}></i>\n        </span>\n      )}\n      {children}\n    </Button>\n  );\n};\nButtons.propTypes = {\n  size: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n};\nButtons.defaultProps = {\n  size: \"sm\",\n  type: \"button\",\n  variant: \"primary\",\n  disabled: false,\n};\n\nexport default Buttons;\n","let apiInstance = null;\n\nexport default class APICall {\n  post = async (url, data = {}, header = {}) => {\n    const response = await fetch(`${process.env.REACT_APP_LOCAL_BK}/${url}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(data),\n    });\n    if (response.ok) {\n      const responseJSON = await response.json();\n\n      return Promise.resolve(responseJSON);\n    } else {\n      return Promise.reject(response);\n    }\n  };\n  get = async (url, header = {}) => {\n    const response = await fetch(`${process.env.REACT_APP_LOCAL_BK}/${url}`, {\n      method: \"GET\",\n      header: {\n        \"content-type\": \"application/json\",\n      },\n    });\n    if (response.ok) {\n      const myHeader = new Headers();\n      myHeader.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      return Promise.reject(response);\n    }\n  };\n  delete = async (url, data, _id, header = {}) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_LOCAL_BK}/${url}/${_id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    if (response.ok) {\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      return Promise.reject(response);\n    }\n  };\n  put = async (url, data, _id, header = {}) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_LOCAL_BK}/${url}/${_id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    if (response.ok) {\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      return Promise.reject(response);\n    }\n  };\n}\n\nexport function getAPIInstance() {\n  if (apiInstance === null) {\n    apiInstance = new APICall();\n  }\n  return apiInstance;\n}\n","import React from \"react\";\nimport { toastr } from \"react-redux-toastr\";\n\nfunction notifier(msg, color = \"success\") {\n  if (color.toLowerCase() === \"success\") {\n    toastr.success(msg);\n  } else if (color.toLowerCase() === \"error\") {\n    toastr.error(msg);\n  }\n}\n\nexport { notifier };\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./modal.scss\";\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"./../../../reducers/globalReducer\";\n\nfunction ModalCompnent({\n  globalReducer,\n  closeModal,\n  children,\n  title,\n  ...rest\n}) {\n  const { show } = globalReducer;\n  const handleClose = () => {\n    closeModal();\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        {title !== \"\" && <Modal.Title>{title}</Modal.Title>}\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n    </Modal>\n  );\n}\nModalCompnent.propTypes = {\n  title: PropTypes.string,\n};\nModalCompnent.defaultProps = {\n  title: \"\",\n};\nconst mapStateToProps = ({ globalReducer }) => ({\n  globalReducer,\n});\nconst mapDispatchToProps = {\n  closeModal,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalCompnent);\n","import { Modal } from \"react-bootstrap\";\nimport React from \"react\";\nimport { closeConfirmModal } from \"../../../reducers/globalReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ConfirmModal({ show, children, title, ...rest }) {\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    dispatch(closeConfirmModal());\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title ? title : null}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"bg-light\">{children}</Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ConfirmModal;\n","import React, { useEffect, useState } from \"react\";\n\nfunction DateTime() {\n  const [dateTime, setDateTime] = useState({\n    date: new Date().toLocaleDateString(),\n    time: new Date().toLocaleTimeString(),\n  });\n  useEffect(() => {\n    const dateInterval = setInterval(() => {\n      setDateTime({\n        date: new Date().toLocaleDateString(),\n        time: new Date().toLocaleTimeString(),\n      });\n    }, 1000);\n    return () => {\n      clearInterval(dateInterval);\n    };\n  }, [dateTime]);\n  return (\n    <div>\n      <span className=\"mx-2\">\n        <i className=\"fa fa-clock\" />\n        {dateTime.time}\n      </span>\n      <span className=\"mx-2\">\n        <i className=\"fa fa-calendar \" />\n        {dateTime.date}\n      </span>\n    </div>\n  );\n}\n\nexport default DateTime;\n","import React, { useEffect, useState } from \"react\";\nimport Buttons from \"../Button\";\nimport DateTime from \"../DateTime\";\nimport \"./index.scss\";\nimport { setIsFetch } from \"./../../../reducers/bankReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction SubHeader(props) {\n  const dispatch = useDispatch();\n  const [isHamBurActive, setIsHamBurActive] = useState(false);\n  const [Screen, setScreen] = useState(window.screen.width);\n  const toggleHamburger = () => {\n    setIsHamBurActive(!isHamBurActive);\n  };\n  const refresh = () => {\n    dispatch(setIsFetch());\n  };\n  useEffect(() => {\n    return () => {\n      window.removeEventListener(\"resize\", setIsHamBurActive(false));\n    };\n  }, []);\n  window.addEventListener(\"resize\", () => {\n    setScreen(window.screen.width);\n  });\n  return (\n    <div className=\"sub-header\">\n      <div className=\"leftEnd\">\n        <Buttons onClick={refresh}>Refresh</Buttons>\n      </div>\n      <div className=\"hamburger\">\n        <i\n          className={isHamBurActive ? \"fas fa-times\" : \"fas fa-bars\"}\n          onClick={toggleHamburger}\n        />\n      </div>\n      <div\n        className={`${\n          Screen < 768 ? (isHamBurActive ? \"d-flex\" : \"d-none\") : \"\"\n        } rightEnd`}\n      >\n        {props.children}\n        <DateTime />\n      </div>\n    </div>\n  );\n}\n\nexport default SubHeader;\n"],"sourceRoot":""}