{"version":3,"sources":["components/Login/LoginForm.jsx","components/Login/index.jsx","components/common/Button/index.jsx","apihandler/APICall.js","components/common/Notifier/index.jsx"],"names":["LoginForm","useState","user","pwd","loginData","setLogindata","isError","setIsError","history","useHistory","onSubmit","e","a","preventDefault","apiCall","getAPIInstance","post","response","localStorage","setItem","token","push","process","Form","method","className","Group","Label","Control","type","name","placeholder","value","onChange","prev","target","Button","variant","Login","Header","Footer","Buttons","props","children","icon","rest","disabled","defaultProps","size","apiInstance","APICall","url","data","getItem","fetch","headers","Token","body","JSON","stringify","ok","json","responseJSON","Promise","resolve","status","clear","createBrowserHistory","reject","get","Headers","set","delete","_id","put","notifier","msg","color","toLowerCase","toastr","success","error"],"mappings":"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","file":"static/js/8.5426a508.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Redirect, useHistory } from \"react-router\";\nimport { getAPIInstance } from \"../../apihandler/APICall\";\nimport Buttons from \"../common/Button\";\nimport { notifier } from \"../common/Notifier\";\n\nfunction LoginForm() {\n  const [loginData, setLogindata] = useState({\n    user: \"\",\n    pwd: \"\",\n  });\n  const [isError, setIsError] = useState(false);\n  const history = useHistory();\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const apiCall = new getAPIInstance();\n      const response = await apiCall.post(\"login\", loginData);\n      localStorage.setItem(\"loggedInUser\", response.token);\n      setIsError(false);\n      history.push(`${process.env.PUBLIC_URL}/`);\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n  return (\n    <Form onSubmit={onSubmit} method=\"POST\" className=\"d-flex flex-column\">\n      {isError && (\n        <span className=\"text-center text-danger\">Invalid Credentials</span>\n      )}\n      <Form.Group>\n        <Form.Label>UserId</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"user\"\n          placeholder=\"Enter UserId\"\n          value={loginData.user}\n          onChange={(e) => {\n            setLogindata((prev) => {\n              return { ...prev, [e.target.name]: e.target.value };\n            });\n          }}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Enter Password\"\n          value={loginData.pwd}\n          name=\"pwd\"\n          onChange={(e) => {\n            setLogindata((prev) => {\n              return { ...prev, [e.target.name]: e.target.value };\n            });\n          }}\n        />\n      </Form.Group>\n      <Buttons variant=\"primary\" type=\"submit\">\n        Login\n      </Buttons>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport FooterComponent from \"../common/Footer\";\nimport HeaderComponent from \"../common/Header\";\nimport LoginForm from \"./LoginForm\";\nimport \"./style.scss\";\n\nfunction Login() {\n  return (\n    <div className=\"d-flex flex-column login-main\">\n      <HeaderComponent />\n      <div className=\"m-auto login-form\">\n        <div className=\"text-center login-header\">Login</div>\n        <LoginForm />\n      </div>\n      <FooterComponent className=\"mt-auto\" />\n    </div>\n  );\n}\n\nexport default Login;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport \"./button.scss\";\n\nconst Buttons = (props) => {\n  const { children, className, variant, icon, ...rest } = props;\n  return (\n    <Button\n      className={`${className} buttonDiv`}\n      disabled={props.disabled}\n      variant={variant}\n      {...rest}\n    >\n      {icon && (\n        <span>\n          <i className={icon}></i>\n        </span>\n      )}\n      {children}\n    </Button>\n  );\n};\nButtons.propTypes = {\n  size: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n};\nButtons.defaultProps = {\n  size: \"sm\",\n  type: \"button\",\n  variant: \"primary\",\n  disabled: false,\n};\n\nexport default Buttons;\n","import { createBrowserHistory } from \"history\";\nimport { logout } from \"../reducers/globalReducer\";\n\nlet apiInstance = null;\n\nexport default class APICall {\n  post = async (url, data = {}, header = {}) => {\n    const token = localStorage.getItem(\"loggedInUser\");\n    const response = await fetch(`${process.env.REACT_APP_LOCAL_BK}/${url}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Token: token,\n      },\n      body: JSON.stringify(data),\n    });\n    if (response.ok) {\n      const responseJSON = await response.json();\n\n      return Promise.resolve(responseJSON);\n    } else {\n      const err = await response.json();\n      if (err.status === \"logout\") {\n        localStorage.clear();\n        createBrowserHistory().push(`${process.env.PUBLIC_URL}/login`);\n      }\n      return Promise.reject(response);\n    }\n  };\n  get = async (url, header = {}) => {\n    const token = localStorage.getItem(\"loggedInUser\");\n    const response = await fetch(`${process.env.REACT_APP_LOCAL_BK}/${url}`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Token: token,\n      },\n    });\n    if (response.ok) {\n      const myHeader = new Headers();\n      myHeader.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      const err = await response.json();\n      if (err.status === \"logout\") {\n        localStorage.clear();\n        createBrowserHistory().push(`${process.env.PUBLIC_URL}/login`);\n      }\n      return Promise.reject(response);\n    }\n  };\n  delete = async (url, data, _id, header = {}) => {\n    const token = localStorage.getItem(\"loggedInUser\");\n\n    const response = await fetch(\n      `${process.env.REACT_APP_LOCAL_BK}/${url}/${_id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Token: token,\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    if (response.ok) {\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      const err = await response.json();\n      if (err.status === \"logout\") {\n        localStorage.clear();\n        createBrowserHistory().push(`${process.env.PUBLIC_URL}/login`);\n      }\n      return Promise.reject(response);\n    }\n  };\n  put = async (url, data, _id, header = {}) => {\n    const token = localStorage.getItem(\"loggedInUser\");\n\n    const response = await fetch(\n      `${process.env.REACT_APP_LOCAL_BK}/${url}/${_id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Token: token,\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    if (response.ok) {\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      const err = await response.json();\n      if (err.status === \"logout\") {\n        localStorage.clear();\n        createBrowserHistory().push(`${process.env.PUBLIC_URL}/login`);\n      }\n      return Promise.reject(response);\n    }\n  };\n}\n\nexport function getAPIInstance() {\n  if (apiInstance === null) {\n    apiInstance = new APICall();\n  }\n  return apiInstance;\n}\n","import React from \"react\";\nimport { toastr } from \"react-redux-toastr\";\n\nfunction notifier(msg, color = \"success\") {\n  if (color.toLowerCase() === \"success\") {\n    toastr.success(msg);\n  } else if (color.toLowerCase() === \"error\") {\n    toastr.error(msg);\n  }\n}\n\nexport { notifier };\n"],"sourceRoot":""}