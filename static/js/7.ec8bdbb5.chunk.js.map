{"version":3,"sources":["components/common/DateTime/index.jsx","components/common/SubHeader/index.jsx","components/Banks/BankHeader.jsx","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","assets/images/banks_logo/axis.png","assets/images/banks_logo/icici.png","assets/images/banks_logo/sbi.png","assets/images/banks_logo/syndicate.png","assets/images/banks_logo/canara.png","constants/bankLogo.js","components/Banks/BankCard.jsx","components/Banks/BankBody.jsx","components/Banks/AddBank.jsx","components/Banks/AccountStatus.jsx","components/Banks/index.jsx","components/common/Button/index.jsx","apihandler/APICall.js","components/common/Notifier/index.jsx","components/common/modal/index.jsx","components/common/ConfirmModal/index.jsx"],"names":["DateTime","useState","date","Date","toLocaleDateString","time","toLocaleTimeString","dateTime","setDateTime","useEffect","dateInterval","setInterval","clearInterval","className","SubHeader","props","history","useHistory","dispatch","useDispatch","isHamBurActive","setIsHamBurActive","window","screen","width","Screen","setScreen","removeEventListener","addEventListener","Button","onClick","setIsFetch","variant","localStorage","clear","push","process","children","mapDispatchToProps","showModal","closeModal","connect","addUser","icon","context","React","createContext","displayName","CardImg","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","bankLogo","1","axis","2","icici","3","sbi","4","canara","5","syndicate","accountType","id","banks","name","imgSrc","BankCard","data","bank","totalAmount","isActive","bankID","accountHolder","useRef","boxRect","setBoxRect","set","current","getBoundingClientRect","myRef","e","xPos","clientX","left","yPos","clientY","top","height","xOffset","dxNorm","Math","min","max","style","transform","src","to","pathname","state","bankname","textTransform","onEdit","disabled","onDelete","setLoader","stopLoader","setInit","clearIsFetch","globalReducer","bankReducer","isLoading","fetchData","cardData","setcardData","noData","a","apiCall","getAPIInstance","get","response","getData","Row","length","map","bankDetail","index","Col","xs","sm","md","lg","xl","AddEditBank","msg","isEdit","companyname","account","setAccount","handleBankfForm","event","preventDefault","editData","_id","companyID","put","bank_obj_id","notifier","json","errResponse","post","companyName","Form","onSubmit","Group","Label","column","Control","type","placeholder","onChange","prev","target","size","AccountStatus","deleteData","deleteAccount","setDeleteData","closeConfirmModal","aria-hidden","setConfirmModal","isConfirm","setIsEdit","setEditData","updateData","ConfirmModal","show","Container","fluid","Buttons","rest","apiInstance","APICall","url","token","getItem","fetch","method","headers","Token","JSON","stringify","ok","responseJSON","Promise","resolve","status","createBrowserHistory","reject","Headers","delete","color","toLowerCase","toastr","success","error","ModalCompnent","title","onHide","closeButton"],"mappings":"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","file":"static/js/7.ec8bdbb5.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction DateTime() {\n  const [dateTime, setDateTime] = useState({\n    date: new Date().toLocaleDateString(),\n    time: new Date().toLocaleTimeString(),\n  });\n  useEffect(() => {\n    const dateInterval = setInterval(() => {\n      setDateTime({\n        date: new Date().toLocaleDateString(),\n        time: new Date().toLocaleTimeString(),\n      });\n    }, 1000);\n    return () => {\n      clearInterval(dateInterval);\n    };\n  }, [dateTime]);\n  return (\n    <div>\n      <span className=\"mx-2\">\n        <i className=\"fa fa-clock\" />\n        {dateTime.time}\n      </span>\n      <span className=\"mx-2\">\n        <i className=\"fa fa-calendar \" />\n        {dateTime.date}\n      </span>\n    </div>\n  );\n}\n\nexport default DateTime;\n","import React, { useEffect, useState } from \"react\";\nimport Buttons from \"../Button\";\nimport DateTime from \"../DateTime\";\nimport \"./index.scss\";\nimport { setIsFetch } from \"./../../../reducers/bankReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nfunction SubHeader(props) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [isHamBurActive, setIsHamBurActive] = useState(false);\n  const [Screen, setScreen] = useState(window.screen.width);\n  const toggleHamburger = () => {\n    setIsHamBurActive(!isHamBurActive);\n  };\n  const refresh = () => {\n    dispatch(setIsFetch());\n  };\n  useEffect(() => {\n    return () => {\n      window.removeEventListener(\"resize\", setIsHamBurActive(false));\n    };\n  }, []);\n  window.addEventListener(\"resize\", () => {\n    setScreen(window.screen.width);\n  });\n  const logout = () => {\n    localStorage.clear();\n    history.push(`${process.env.PUBLIC_URL}/login`);\n  };\n  return (\n    <div className=\"sub-header\">\n      <div className=\"leftEnd\">\n        <Buttons onClick={refresh}>Refresh</Buttons>\n        <Buttons variant=\"info ml-2\" onClick={logout}>\n          Logout\n        </Buttons>\n      </div>\n      <div className=\"hamburger\">\n        <i\n          className={isHamBurActive ? \"fas fa-times\" : \"fas fa-bars\"}\n          onClick={toggleHamburger}\n        />\n      </div>\n      <div\n        className={`${\n          Screen < 768 ? (isHamBurActive ? \"d-flex\" : \"d-none\") : \"\"\n        } rightEnd`}\n      >\n        {props.children}\n        <DateTime />\n      </div>\n    </div>\n  );\n}\n\nexport default SubHeader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Buttons from \"../common/Button\";\nimport SubHeader from \"../common/SubHeader\";\nimport { showModal, closeModal } from \"./../../reducers/globalReducer\";\n\nfunction BankHeader({ addUser, showModal, ...rest }) {\n  return (\n    <SubHeader>\n      <Buttons onClick={addUser} icon={\"fa fa-plus\"}>\n        Add Bank\n      </Buttons>\n    </SubHeader>\n  );\n}\n\nconst mapDispatchToProps = { showModal, closeModal };\nexport default connect(null, mapDispatchToProps)(BankHeader);\n","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","export default __webpack_public_path__ + \"static/media/axis.b40725ff.png\";","export default __webpack_public_path__ + \"static/media/icici.ff197871.png\";","export default __webpack_public_path__ + \"static/media/sbi.c35f85fb.png\";","export default __webpack_public_path__ + \"static/media/syndicate.21a6835f.png\";","export default __webpack_public_path__ + \"static/media/canara.08e89d18.png\";","import axis from \"./../assets/images/banks_logo/axis.png\";\nimport icici from \"./../assets/images/banks_logo/icici.png\";\nimport sbi from \"./../assets/images/banks_logo/sbi.png\";\nimport syndicate from \"./../assets/images/banks_logo/syndicate.png\";\nimport canara from \"./../assets/images/banks_logo/canara.png\";\nexport const bankLogo = {\n  1: [axis, \"axis\"],\n  2: [icici, \"icici\"],\n  3: [sbi, \"sbi\"],\n  4: [canara, \"canara\"],\n  5: [syndicate, \"syndicate\"],\n};\nexport const accountType = [\n  {\n    id: \"Salary\",\n    value: \"Salary\",\n  },\n  {\n    id: \"Savings\",\n    value: \"Savings\",\n  },\n];\nexport const banks = [\n  {\n    id: 1,\n    name: \"Axis Bank\",\n    imgSrc: axis,\n    className: \"axis\",\n  },\n  {\n    id: 2,\n    name: \"ICICI Bank\",\n    imgSrc: icici,\n    className: \"icici\",\n  },\n  {\n    id: 3,\n    name: \"SBI Bank\",\n    imgSrc: sbi,\n    className: \"sbi\",\n  },\n  {\n    id: 4,\n    name: \"Canara Bank\",\n    imgSrc: canara,\n    className: \"canara\",\n  },\n  {\n    id: 5,\n    name: \"Syndicate Bank\",\n    imgSrc: syndicate,\n    className: \"syndicate\",\n  },\n];\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Buttons from \"../common/Button\";\n\n// import axis from \"./../../assets/images/banks_logo/axis.png\";\nimport { bankLogo } from \"./../../constants/bankLogo\";\n\nfunction BankCard(props) {\n  const { bank, totalAmount, isActive, bankID, accountHolder, accountType } =\n    props.data;\n  const ref = useRef();\n  const [boxRect, setBoxRect] = useState({});\n\n  const set = () =>\n    setBoxRect(ref && ref.current ? ref.current.getBoundingClientRect() : {});\n\n  useEffect(() => {\n    set();\n    const myRef = ref.current;\n    if (myRef) {\n      myRef.addEventListener(\"mousemove\", (e) => {\n        const xPos = (e.clientX - boxRect.left) / boxRect.width;\n        const yPos = (e.clientY - boxRect.top) / boxRect.height - 0.6;\n        const xOffset = -(xPos - 0.6);\n        const dxNorm = Math.min(Math.max(xOffset, -0.6), 0.6);\n        myRef.style.transform = `perspective(50px)\n          rotateY(${dxNorm * 4}deg)\n          rotateY(${xPos * 0}deg)\n          rotateX(${dxNorm * 0}deg)\n          rotateX(${yPos * 0}deg)\n          `;\n      });\n      myRef.addEventListener(\"mouseleave\", () => {\n        myRef.style.transform = \"none\";\n      });\n    }\n    return () => {\n      if (myRef) {\n        myRef.removeEventListener(\"mousemove\", set);\n        myRef.removeEventListener(\"mouseleave\", set);\n      }\n    };\n  }, [boxRect.top]);\n\n  return (\n    <div className=\"bankCard\">\n      <Card\n        style={{ width: \"100%\" }}\n        className={`bg-${bankLogo[bank][1]}`}\n        ref={ref}\n      >\n        <Card.Img variant=\"top\" src={bankLogo[bank][0]} />\n        <Card.Body>\n          <Link\n            to={{\n              pathname: `/${process.env.REACT_APP_BASE}/account-detail/${bankID}`,\n              state: {\n                isActive,\n                accountHolder,\n                bankname: bankLogo[bank][1],\n                accountType,\n              },\n            }}\n          >\n            <Card.Title\n              style={{ textTransform: \"capitalize\" }}\n            >{`${accountHolder}`}</Card.Title>\n          </Link>\n          <Card.Text>{`Rs.${totalAmount}/-`}</Card.Text>\n        </Card.Body>\n        <Card.Footer className=\"text-muted\">\n          <div className=\"bank-actions\">\n            <Buttons\n              className=\"del\"\n              variant=\"info\"\n              onClick={() => props.onEdit(props.data)}\n              icon={\"fa fa-edit\"}\n              disabled={!props.data.isActive}\n            >\n              Edit\n            </Buttons>\n            <Buttons\n              className=\"edit\"\n              variant={props.data.isActive ? \"danger\" : \"primary\"}\n              onClick={() => props.onDelete(props.data)}\n              icon={props.data.isActive ? \"fa fa-trash\" : \"fa fa-check\"}\n            >\n              {props.data.isActive ? \"Deactivate\" : \"Activate\"}\n            </Buttons>\n          </div>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n\nexport default BankCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport BankCard from \"./BankCard\";\nimport { connect } from \"react-redux\";\nimport { setLoader, stopLoader, setInit } from \"./../../reducers/globalReducer\";\nimport { clearIsFetch } from \"./../../reducers/bankReducer\";\nimport { getAPIInstance } from \"./../../apihandler/APICall\";\n\nconst BankBody = (props) => {\n  const {\n    globalReducer,\n    bankReducer,\n    clearIsFetch,\n    setLoader,\n    stopLoader,\n    setInit,\n  } = props;\n  const { isLoading } = globalReducer;\n  const { fetchData } = bankReducer;\n  const [cardData, setcardData] = useState([]);\n  const noData = (\n    <span>\n      <i className=\"fas fa-money-check\"></i>No Bank Found.Please Add Bank Using\n      Add Bank Button.\n    </span>\n  );\n  useEffect(() => {\n    const getData = async () => {\n      setLoader(true);\n      const apiCall = new getAPIInstance();\n      const response = await apiCall.get(\"user\");\n      stopLoader(true);\n      clearIsFetch();\n      setcardData(response.data);\n    };\n    getData();\n    return () => {\n      setInit();\n      clearIsFetch();\n    };\n  }, [fetchData]);\n\n  return (\n    <div className=\"bankBodyDiv\">\n      <Row>\n        {isLoading ? null : cardData && cardData.length > 0 ? (\n          cardData.map((bankDetail, index) => {\n            return (\n              <Col\n                key={index}\n                className=\"col\"\n                xs={12}\n                sm={12}\n                md={4}\n                lg={4}\n                xl={4}\n              >\n                <BankCard\n                  data={bankDetail}\n                  onDelete={props.onDelete}\n                  onEdit={props.onEdit}\n                />\n              </Col>\n            );\n          })\n        ) : (\n          <div className={`no-data-div`}>{noData}</div>\n        )}\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ globalReducer, bankReducer }) => ({\n  globalReducer,\n  bankReducer,\n});\nconst mapDispatchToProps = {\n  setLoader,\n  stopLoader,\n  setInit,\n  clearIsFetch,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BankBody);\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport Buttons from \"../common/Button\";\nimport { getAPIInstance } from \"./../../apihandler/APICall\";\nimport { banks, accountType } from \"./../../constants/bankLogo\";\nimport { closeModal } from \"./../../reducers/globalReducer\";\nimport { setIsFetch } from \"./../../reducers/bankReducer\";\nimport { notifier } from \"../common/Notifier\";\n\nfunction AddEditBank(props) {\n  let msg = \"\";\n  const dispatch = useDispatch();\n  const { isEdit } = props;\n  const [account, setAccount] = useState({\n    bankID: \"\",\n    accountHolder: \"\",\n    accountType: \"\",\n    companyname: \"\",\n  });\n  const handleBankfForm = async (event) => {\n    event.preventDefault();\n    if (isEdit) {\n      try {\n        const { _id, bankID, companyID } = props.editData;\n        const apiCall = new getAPIInstance();\n        const response = await apiCall.put(\n          \"user\",\n          { ...account, bankID, bank_obj_id: account.bankID, companyID },\n          _id\n        );\n        msg = \"Account Updated Successfully\";\n        dispatch(closeModal());\n        dispatch(setIsFetch());\n        notifier(msg, \"Success\");\n      } catch (error) {\n        const errResponse = await error.json();\n        const msg = errResponse.msg;\n        notifier(msg, \"Error\");\n      }\n    } else {\n      try {\n        const apiCall = new getAPIInstance();\n        const response = await apiCall.post(\"user\", account);\n        msg = \"Account Created Successfully\";\n        dispatch(closeModal());\n        dispatch(setIsFetch());\n        notifier(msg, \"Success\");\n      } catch (error) {\n        const errResponse = await error.json();\n        const msg = errResponse.msg;\n        notifier(msg, \"Error\");\n      }\n    }\n  };\n  useEffect(() => {\n    if (props.isEdit) {\n      const { accountHolder, accountType, bank, companyName } = props.editData;\n      setAccount({\n        bankID: bank,\n        accountHolder,\n        accountType,\n        companyname: companyName,\n      });\n    } else {\n      setAccount({\n        bankID: \"1\",\n        accountHolder: \"\",\n        accountType: \"Savings\",\n        companyname: \"\",\n      });\n    }\n  }, []);\n  return (\n    <div className=\"bank-form\">\n      <Form onSubmit={handleBankfForm}>\n        {/* <Form.Group as={Row}>\n          <Form.Label column sm=\"12\">\n            Bank Name\n          </Form.Label>\n          <Col sm=\"12\">\n            <Form.Control\n              type=\"text\"\n              name=\"bankName\"\n              placeholder=\"Enter Bank Name\"\n              id=\"bankname\"\n              value={account.bankName}\n              onChange={(e) =>\n                setAccount((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                })\n              }\n            />\n          </Col>\n        </Form.Group> */}\n\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"12\">\n            Account Holder Name\n          </Form.Label>\n          <Col sm=\"12\" className=\"p-0 m-0\">\n            <Form.Control\n              type=\"text\"\n              name=\"accountHolder\"\n              id=\"accountHolder\"\n              placeholder=\"Enter Account Holder Name\"\n              value={account.accountHolder}\n              onChange={(e) =>\n                setAccount((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                })\n              }\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"12\">\n            Bank Name\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            size=\"md\"\n            name=\"bankID\"\n            placeholder=\"Enter Bank Name\"\n            id=\"bankID\"\n            value={account.bankID}\n            onChange={(e) =>\n              setAccount((prev) => {\n                return { ...prev, [e.target.name]: e.target.value };\n              })\n            }\n          >\n            {banks.map((bank, index) => {\n              return (\n                <option key={index} value={bank.id}>\n                  {bank.name}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"12\">\n            Account Type\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            size=\"md\"\n            name=\"accountType\"\n            id=\"accountType\"\n            value={account.accountType}\n            onChange={(e) =>\n              setAccount((prev) => {\n                return { ...prev, [e.target.name]: e.target.value };\n              })\n            }\n          >\n            {accountType.map((type, index) => {\n              return (\n                <option key={index} value={type.id}>\n                  {type.value}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        {account.accountType === \"Salary\" && (\n          <Form.Group as={Row}>\n            <Form.Label column sm={12}>\n              Company Name\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"companyname\"\n              id=\"companyname\"\n              value={account.companyname}\n              placeholder=\"Enter Company Name\"\n              onChange={(e) =>\n                setAccount((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                })\n              }\n            />\n          </Form.Group>\n        )}\n        <Buttons type=\"submit\" size=\"medium\">\n          {props.isEdit ? \"Edit\" : \"Add\"}\n        </Buttons>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddEditBank;\n","import React from \"react\";\nimport Buttons from \"../common/Button\";\nimport { bankLogo } from \"./../../constants/bankLogo\";\nfunction AccountStatus({\n  deleteData,\n  deleteAccount,\n  setDeleteData,\n  closeConfirmModal,\n}) {\n  return (\n    <div className=\"prompt\">\n      <pre>\n        {`Are you sure you want to ${\n          deleteData.isActive ? \"Deactive\" : \"Active\"\n        } -${deleteData.accountHolder}'s ${\n          bankLogo[deleteData.bank] && bankLogo[deleteData.bank][1]\n        } account`}\n      </pre>\n      <div>\n        <Buttons\n          className=\"mx-2\"\n          variant=\"danger\"\n          onClick={() => {\n            setDeleteData({});\n            closeConfirmModal();\n          }}\n        >\n          <i className=\"fa fa-times mx-1 text-light\" aria-hidden=\"true\" />\n          No\n        </Buttons>\n        <Buttons\n          className=\"mx-2\"\n          variant=\"primary\"\n          onClick={() => deleteAccount(deleteData._id, deleteData.isActive)}\n        >\n          <i className=\"fa fa-check mx-1 text-light\" aria-hidden=\"true\" />\n          Yes\n        </Buttons>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountStatus;\n","import React, { useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n// Reducers and API\nimport {\n  setConfirmModal,\n  closeConfirmModal,\n  showModal,\n  closeModal,\n} from \"./../../reducers/globalReducer\";\nimport { setIsFetch } from \"./../../reducers/bankReducer\";\nimport { getAPIInstance } from \"./../../apihandler/APICall\";\n// Components and scss\nimport \"./banks.scss\";\nimport Modal from \"./../common/modal\";\nimport ConfirmModal from \"../common/ConfirmModal\";\nimport BankHeader from \"./BankHeader\";\nimport BankBody from \"./BankBody\";\nimport { notifier } from \"../common/Notifier\";\nimport AddEditBank from \"./AddBank\";\nimport AccountStatus from \"./AccountStatus\";\n\nconst BankComponent = ({\n  bankReducer,\n  globalReducer,\n  showModal,\n  closeModal,\n  setConfirmModal,\n  closeConfirmModal,\n  setIsFetch,\n  ...rest\n}) => {\n  const { isConfirm } = globalReducer;\n  const [isEdit, setIsEdit] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [deleteData, setDeleteData] = useState({});\n  const onEdit = (data) => {\n    setIsEdit(true);\n    setEditData(data);\n    showModal();\n  };\n  const addUser = () => {\n    setIsEdit(false);\n    showModal();\n  };\n  const deleteUser = (data) => {\n    setDeleteData(data);\n    setConfirmModal(data);\n  };\n\n  const deleteAccount = async (_id, isActive) => {\n    try {\n      let msg = \"\";\n      const updateData = { isActive: !isActive };\n      const apiCall = new getAPIInstance();\n      const response = await apiCall.put(\"user\", updateData, _id);\n      msg = \"Account Updated Successfully\";\n      setIsFetch();\n      notifier(msg, \"Success\");\n      closeConfirmModal();\n    } catch (error) {\n      const errResponse = await error.json();\n      const msg = errResponse.msg;\n      notifier(msg, \"Error\");\n      closeConfirmModal();\n    }\n  };\n  return (\n    <>\n      <ConfirmModal show={isConfirm}>\n        <AccountStatus\n          setDeleteData={setDeleteData}\n          closeConfirmModal={closeConfirmModal}\n          deleteAccount={deleteAccount}\n          deleteData={deleteData}\n        />\n      </ConfirmModal>\n      <Modal>\n        <AddEditBank isEdit={isEdit} editData={editData} />\n      </Modal>\n      <Container fluid className=\"bankContainer\">\n        <Row className=\"sticky-header\">\n          <Col>\n            <BankHeader addUser={addUser} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <BankBody onEdit={onEdit} onDelete={deleteUser} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ bankReducer, globalReducer }) => ({\n  bankReducer,\n  globalReducer,\n});\nconst mapDispatchToProps = {\n  showModal,\n  closeModal,\n  closeConfirmModal,\n  setConfirmModal,\n  setIsFetch,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BankComponent);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport \"./button.scss\";\n\nconst Buttons = (props) => {\n  const { children, className, variant, icon, ...rest } = props;\n  return (\n    <Button\n      className={`${className} buttonDiv`}\n      disabled={props.disabled}\n      variant={variant}\n      {...rest}\n    >\n      {icon && (\n        <span>\n          <i className={icon}></i>\n        </span>\n      )}\n      {children}\n    </Button>\n  );\n};\nButtons.propTypes = {\n  size: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n};\nButtons.defaultProps = {\n  size: \"sm\",\n  type: \"button\",\n  variant: \"primary\",\n  disabled: false,\n};\n\nexport default Buttons;\n","import { createBrowserHistory } from \"history\";\nimport { logout } from \"../reducers/globalReducer\";\n\nlet apiInstance = null;\n\nexport default class APICall {\n  post = async (url, data = {}, header = {}) => {\n    const token = localStorage.getItem(\"loggedInUser\");\n    const response = await fetch(`${process.env.REACT_APP_LOCAL_BK}/${url}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Token: token,\n      },\n      body: JSON.stringify(data),\n    });\n    if (response.ok) {\n      const responseJSON = await response.json();\n\n      return Promise.resolve(responseJSON);\n    } else {\n      const err = await response.json();\n      if (err.status === \"logout\") {\n        localStorage.clear();\n        createBrowserHistory().push(`${process.env.PUBLIC_URL}/login`);\n      }\n      return Promise.reject(response);\n    }\n  };\n  get = async (url, header = {}) => {\n    const token = localStorage.getItem(\"loggedInUser\");\n    const response = await fetch(`${process.env.REACT_APP_LOCAL_BK}/${url}`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Token: token,\n      },\n    });\n    if (response.ok) {\n      const myHeader = new Headers();\n      myHeader.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      const err = await response.json();\n      if (err.status === \"logout\") {\n        localStorage.clear();\n        createBrowserHistory().push(`${process.env.PUBLIC_URL}/login`);\n      }\n      return Promise.reject(response);\n    }\n  };\n  delete = async (url, data, _id, header = {}) => {\n    const token = localStorage.getItem(\"loggedInUser\");\n\n    const response = await fetch(\n      `${process.env.REACT_APP_LOCAL_BK}/${url}/${_id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Token: token,\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    if (response.ok) {\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      const err = await response.json();\n      if (err.status === \"logout\") {\n        localStorage.clear();\n        createBrowserHistory().push(`${process.env.PUBLIC_URL}/login`);\n      }\n      return Promise.reject(response);\n    }\n  };\n  put = async (url, data, _id, header = {}) => {\n    const token = localStorage.getItem(\"loggedInUser\");\n\n    const response = await fetch(\n      `${process.env.REACT_APP_LOCAL_BK}/${url}/${_id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Token: token,\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    if (response.ok) {\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      const err = await response.json();\n      if (err.status === \"logout\") {\n        localStorage.clear();\n        createBrowserHistory().push(`${process.env.PUBLIC_URL}/login`);\n      }\n      return Promise.reject(response);\n    }\n  };\n}\n\nexport function getAPIInstance() {\n  if (apiInstance === null) {\n    apiInstance = new APICall();\n  }\n  return apiInstance;\n}\n","import React from \"react\";\nimport { toastr } from \"react-redux-toastr\";\n\nfunction notifier(msg, color = \"success\") {\n  if (color.toLowerCase() === \"success\") {\n    toastr.success(msg);\n  } else if (color.toLowerCase() === \"error\") {\n    toastr.error(msg);\n  }\n}\n\nexport { notifier };\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./modal.scss\";\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"./../../../reducers/globalReducer\";\n\nfunction ModalCompnent({\n  globalReducer,\n  closeModal,\n  children,\n  title,\n  ...rest\n}) {\n  const { show } = globalReducer;\n  const handleClose = () => {\n    closeModal();\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        {title !== \"\" && <Modal.Title>{title}</Modal.Title>}\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n    </Modal>\n  );\n}\nModalCompnent.propTypes = {\n  title: PropTypes.string,\n};\nModalCompnent.defaultProps = {\n  title: \"\",\n};\nconst mapStateToProps = ({ globalReducer }) => ({\n  globalReducer,\n});\nconst mapDispatchToProps = {\n  closeModal,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalCompnent);\n","import { Modal } from \"react-bootstrap\";\nimport React from \"react\";\nimport { closeConfirmModal } from \"../../../reducers/globalReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ConfirmModal({ show, children, title, ...rest }) {\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    dispatch(closeConfirmModal());\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title ? title : null}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"bg-light\">{children}</Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ConfirmModal;\n"],"sourceRoot":""}