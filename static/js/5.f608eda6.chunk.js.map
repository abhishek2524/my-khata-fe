{"version":3,"sources":["components/BankDetails/AddDetailsForm.jsx","components/common/table/index.jsx","components/BankDetails/BankDetailBody.jsx","components/BankDetails/BankDetailHeader.jsx","components/BankDetails/index.jsx","components/common/Button/index.jsx","apihandler/APICall.js","components/common/Notifier/index.jsx","components/common/modal/index.jsx","components/common/ConfirmModal/index.jsx","components/common/DateTime/index.jsx","components/common/SubHeader/index.jsx"],"names":["AddDetailsForm","props","dispatch","useDispatch","bankid","useParams","useState","date","Date","toISOString","split","amount","transactionType","comments","isSalary","details","setDetails","handleBankForm","e","a","preventDefault","isEdit","action","apiCall","getAPIInstance","put","closeModal","setIsFetch","notifier","json","errResponse","msg","post","useEffect","editData","Form","onSubmit","Row","Col","sm","md","Group","controlId","Label","Control","type","min","name","placeholder","value","onChange","prev","target","as","accountType","Check","id","label","checked","className","Button","TableComponent","Search","SearchBar","pagination","paginationFactory","page","sizePerPage","lastPageText","firstPageText","prePageText","nextPageText","showTotal","alwaysShowAllBtns","dataList","columns","rest","bootstrap4","data","striped","hover","condensed","noDataIndication","classes","headerWrapperClasses","footerClasses","require","mapDispatchToProps","setLoader","stopLoader","setInit","showModal","clearIsFetch","connect","globalReducer","bankReducer","isLoading","setDataList","fetchData","totalCount","settotalCount","actionBtn","dataField","formatter","cell","row","toDateString","text","sort","index","isActive","variant","onClick","onEdit","aria-hidden","onDelete","map","res","footerStyle","color","footer","toString","count","get","response","parseInt","getData","keyField","search","searchProps","order","baseProps","onAdd","SubHeader","accountHolder","bankname","toUpperCase","to","process","setConfirmModal","closeConfirmModal","useLocation","state","deleteData","setDeleteData","isConfirm","setIsEdit","tax","setEditData","deleteDetails","delete","transactionId","_id","ConfirmModal","show","title","Container","fluid","Buttons","children","icon","disabled","defaultProps","size","apiInstance","APICall","url","fetch","method","headers","body","JSON","stringify","ok","responseJSON","Promise","resolve","reject","header","Headers","set","toLowerCase","toastr","success","error","ModalCompnent","onHide","Header","closeButton","Title","Body","DateTime","toLocaleDateString","time","toLocaleTimeString","dateTime","setDateTime","dateInterval","setInterval","clearInterval","isHamBurActive","setIsHamBurActive","window","screen","width","Screen","setScreen","removeEventListener","addEventListener"],"mappings":"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","file":"static/js/5.f608eda6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { getAPIInstance } from \"../../apihandler/APICall\";\nimport { setIsFetch } from \"../../reducers/bankReducer\";\nimport { closeModal } from \"../../reducers/globalReducer\";\nimport { notifier } from \"../common/Notifier\";\nimport Buttons from \"./../common/Button\";\n\nconst AddDetailsForm = (props) => {\n  const dispatch = useDispatch();\n  const { bankid } = useParams();\n  const [details, setDetails] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    amount: \"0\",\n    transactionType: \"deposit\",\n    comments: \"\",\n    isSalary: false,\n  });\n  const handleBankForm = async (e) => {\n    e.preventDefault();\n    if (props.isEdit) {\n      delete details.action;\n      try {\n        let msg;\n        const apiCall = new getAPIInstance();\n        const response = await apiCall.put(`bank`, details, bankid);\n        msg = \"Account Updated Successfully\";\n        dispatch(closeModal());\n        dispatch(setIsFetch());\n        notifier(msg, \"Success\");\n      } catch (error) {\n        const errResponse = await error.json();\n        const msg = errResponse.msg;\n        notifier(msg, \"Error\");\n      }\n    } else {\n      try {\n        let msg;\n        const apiCall = new getAPIInstance();\n        const response = await apiCall.post(`bank/${bankid}`, details);\n        msg = \"Account Created Successfully\";\n        dispatch(closeModal());\n        dispatch(setIsFetch());\n        notifier(msg, \"Success\");\n      } catch (error) {\n        const errResponse = await error.json();\n        const msg = errResponse.msg;\n        notifier(msg, \"Error\");\n      }\n    }\n  };\n  useEffect(() => {\n    if (props.isEdit) {\n      setDetails(props.editData);\n    }\n  }, []);\n\n  return (\n    <Form onSubmit={handleBankForm}>\n      <Row>\n        <Col sm=\"12\" md=\"6\">\n          <Form.Group controlId=\"amount\">\n            <Form.Label>Enter Amount</Form.Label>\n            <Form.Control\n              type=\"number\"\n              min=\"0\"\n              name=\"amount\"\n              placeholder=\"Enter Amount\"\n              value={details.amount}\n              onChange={(e) => {\n                return setDetails((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                });\n              }}\n            />\n          </Form.Group>\n        </Col>\n        <Col sm=\"12\" md=\"6\">\n          <Form.Group controlId=\"amttype\">\n            <Form.Label>Select Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"transactionType\"\n              value={details.transactionType}\n              onChange={(e) => {\n                return setDetails((prev) => {\n                  if (e.target.value === \"withdrawal\") {\n                    return {\n                      ...prev,\n                      [e.target.name]: e.target.value,\n                      isSalary: false,\n                    };\n                  }\n                  return { ...prev, [e.target.name]: e.target.value };\n                });\n              }}\n            >\n              <option value=\"deposit\">Deposit</option>\n              <option value=\"withdrawal\">Withdrawal</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md=\"6\">\n          <Form.Group controlId=\"comments\">\n            <Form.Label>Comments</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"comments\"\n              placeholder=\"Enter your comment\"\n              value={details.comments}\n              onChange={(e) => {\n                return setDetails((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                });\n              }}\n            />\n          </Form.Group>\n        </Col>\n        <Col sm=\"12\" md=\"6\">\n          <Form.Group>\n            <Form.Label>Select Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              name=\"date\"\n              value={details.date}\n              onChange={(e) => {\n                return setDetails((prev) => {\n                  return { ...prev, [e.target.name]: e.target.value };\n                });\n              }}\n            />\n          </Form.Group>\n        </Col>\n      </Row>\n      {props.accountType === \"Salary\" &&\n        details.transactionType !== \"withdrawal\" && (\n          <Row>\n            <Col sm=\"12\" md=\"6\">\n              <Form.Group controlId=\"is_salary\">\n                <Form.Check\n                  type=\"checkbox\"\n                  id=\"isSalary\"\n                  label=\"Is this your salary\"\n                  name=\"isSalary\"\n                  checked={details.isSalary}\n                  onChange={(e) => {\n                    return setDetails((prev) => {\n                      return { ...prev, [e.target.name]: e.target.checked };\n                    });\n                  }}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n        )}\n      <Row>\n        <Col sm=\"12\" md=\"12\" className=\"d-flex justify-content-end\">\n          <Buttons type=\"submit\">Submit</Buttons>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default AddDetailsForm;\n","import BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.css\";\n\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\n// import \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\n// import filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\n\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\n\nimport \"./table.scss\";\n\nconst TableComponent = (props) => {\n  const { SearchBar } = Search;\n  const pagination = paginationFactory({\n    page: 1,\n    sizePerPage: 5,\n    lastPageText: \">>\",\n    firstPageText: \"<<\",\n    prePageText: \"<\",\n    nextPageText: \">\",\n    showTotal: true,\n    alwaysShowAllBtns: true,\n  });\n  const { dataList, columns, ...rest } = props;\n\n  return (\n    <>\n      {dataList && (\n        <BootstrapTable\n          bootstrap4\n          // keyField=\"id\"\n          data={dataList}\n          columns={columns}\n          pagination={pagination}\n          striped\n          hover\n          condensed\n          noDataIndication=\"No records\"\n          classes=\"wrapper\"\n          headerWrapperClasses=\"tbl-header-footer\"\n          footerClasses=\"tbl-header-footer\"\n          {...rest}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TableComponent;\n","import Button from \"./../common/Button\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport TableComponent from \"../common/table\";\nimport {\n  setLoader,\n  stopLoader,\n  showModal,\n  closeModal,\n  setInit,\n} from \"./../../reducers/globalReducer\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { getAPIInstance } from \"../../apihandler/APICall\";\nimport { clearIsFetch } from \"../../reducers/bankReducer\";\nimport { useParams } from \"react-router\";\nconst moment = require(\"moment\");\n\nfunction BankDetailBody(props) {\n  const { bankid } = useParams();\n  const { SearchBar } = Search;\n  const { setLoader, clearIsFetch, stopLoader, setInit, globalReducer } = props;\n  const { isLoading } = globalReducer;\n  const [dataList, setDataList] = useState([]);\n  const { fetchData } = props.bankReducer;\n  const [totalCount, settotalCount] = useState(0);\n\n  const actionBtn = <div></div>;\n  let columns = [\n    {\n      dataField: \"date\",\n      formatter: (cell, row) => {\n        return new Date(`${cell}`).toDateString();\n      },\n      text: \"Date\",\n      sort: true,\n    },\n    {\n      dataField: \"amount\",\n      text: \"Amount\",\n      formatter(cell) {\n        return `Rs. ${cell}`;\n      },\n      sort: true,\n    },\n    {\n      dataField: \"transactionType\",\n      text: \"Type\",\n      sort: true,\n    },\n    {\n      dataField: \"isSalary\",\n      text: \"Salary?\",\n      sort: true,\n      formatter(cell) {\n        return cell ? \"Yes\" : \"No\";\n      },\n    },\n    {\n      dataField: \"comments\",\n      text: \"Comment\",\n      formatter(cell) {\n        return cell ? cell : \"-\";\n      },\n    },\n    {\n      dataField: \"action\",\n      text: \"Action\",\n      formatter: (cell, row, index) => {\n        if (cell) {\n          return !props.isActive ? null : (\n            <>\n              <Button\n                className=\"mx-2\"\n                variant=\"info\"\n                onClick={() => props.onEdit(cell, row, index, bankid)}\n              >\n                <i className=\"fa fa-edit text-light\" aria-hidden=\"true\"></i>\n              </Button>\n              <Button\n                className=\"mx-2\"\n                variant=\"danger\"\n                onClick={() => props.onDelete(cell, row, index, bankid)}\n              >\n                <i className=\"fa fa-trash text-light\" aria-hidden=\"true\"></i>\n              </Button>\n            </>\n          );\n        }\n      },\n    },\n  ];\n  columns = columns.map((res, index) => {\n    return {\n      ...res,\n      footerStyle: {\n        color: \"white\",\n      },\n      footer:\n        index === 0\n          ? \"Total\"\n          : index === 1\n          ? `Rs. ${totalCount.toString()}/-`\n          : \"\",\n    };\n  });\n  useEffect(() => {\n    const getData = async () => {\n      let count = 0;\n      setLoader(true);\n      const apiCall = new getAPIInstance();\n      const response = await apiCall.get(`bank/${bankid}`);\n      setDataList(\n        response.data.map((res, index) => {\n          if (res.transactionType === \"deposit\") {\n            // settotalCount((total) => total + parseInt(res.amount));\n            count += parseInt(res.amount);\n          } else if (res.transactionType === \"withdrawal\") {\n            // settotalCount((total) => total - parseInt(res.amount));\n            count -= parseInt(res.amount);\n          }\n          return {\n            ...res,\n            action: actionBtn,\n          };\n        })\n      );\n      settotalCount(count);\n      stopLoader(true);\n      clearIsFetch();\n    };\n    getData();\n    return () => {\n      setInit();\n      clearIsFetch();\n    };\n  }, [fetchData]);\n  return isLoading ? null : (\n    <ToolkitProvider keyField=\"id\" data={dataList} columns={columns} search>\n      {(props) => {\n        return (\n          <div className=\"d-flex flex-column\">\n            <SearchBar {...props.searchProps} />\n            <TableComponent\n              sort={{ dataField: \"date\", order: \"desc\" }}\n              columns={columns}\n              dataList={dataList}\n              {...props.baseProps}\n            />\n          </div>\n        );\n      }}\n    </ToolkitProvider>\n  );\n}\n\nconst mapStateToProps = ({ globalReducer, bankReducer }) => ({\n  globalReducer,\n  bankReducer,\n});\nconst mapDispatchToProps = {\n  setLoader,\n  stopLoader,\n  setInit,\n  showModal,\n  closeModal,\n  clearIsFetch,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BankDetailBody);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport Buttons from \"../common/Button\";\nimport SubHeader from \"../common/SubHeader\";\nimport { showModal, closeModal } from \"./../../reducers/globalReducer\";\n\nfunction BankDetailHeader({ showModal, onAdd, data, ...rest }) {\n  return (\n    <SubHeader>\n      <div className=\"mx-2 heading text-light font-weight-bold\">\n        {`${data.accountHolder} - ${data.bankname.toUpperCase()} Bank`}\n      </div>\n      <NavLink to={`/${process.env.REACT_APP_BASE}/`}>\n        <Buttons>Bank List</Buttons>\n      </NavLink>\n      {data.isActive && (\n        <Buttons variant=\"info\" onClick={onAdd} className=\"mx-2\">\n          New Enteries\n        </Buttons>\n      )}\n    </SubHeader>\n  );\n}\n\nconst mapDispatchToProps = { showModal, closeModal };\nexport default connect(null, mapDispatchToProps)(BankDetailHeader);\n","import React, { useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport AddDetailsForm from \"./AddDetailsForm\";\nimport BankDetailBody from \"./BankDetailBody\";\nimport BankDetailHeader from \"./BankDetailHeader\";\nimport \"./bankdetails.scss\";\n\nimport Modal from \"./../common/modal\";\nimport { showModal, closeModal } from \"./../../reducers/globalReducer\";\nimport {\n  closeConfirmModal,\n  setConfirmModal,\n} from \"./../../reducers/globalReducer\";\nimport { connect, useDispatch } from \"react-redux\";\nimport ConfirmModal from \"../common/ConfirmModal\";\nimport Buttons from \"../common/Button\";\nimport { useLocation } from \"react-router\";\nimport { getAPIInstance } from \"../../apihandler/APICall\";\nimport { setIsFetch } from \"../../reducers/bankReducer\";\nimport { notifier } from \"../common/Notifier\";\n\nfunction BankDetails({\n  bankReducer,\n  showModal,\n  closeConfirmModal,\n  setConfirmModal,\n  globalReducer,\n  ...rest\n}) {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { accountHolder, isActive, bankname, accountType } = location.state;\n  const [deleteData, setDeleteData] = useState({});\n  const { isConfirm } = globalReducer;\n  const [isEdit, setIsEdit] = useState(false);\n  const [editData, setEditData] = useState({\n    date: new Date().toISOString().split(\"T\")[0],\n    amount: \"0\",\n    type: \"1\",\n    tax: \"0\",\n  });\n  const onEdit = (cell, row, index, bankid) => {\n    row.date = row.date.split(\"T\")[0];\n    setEditData(row);\n    setIsEdit(true);\n    showModal();\n  };\n  const onAdd = () => {\n    setIsEdit(false);\n    showModal();\n  };\n  const onDelete = (cell, row, index, bankid) => {\n    setDeleteData({ ...row, bankid });\n    setConfirmModal();\n  };\n  const deleteDetails = async () => {\n    try {\n      let msg;\n      const apiCall = new getAPIInstance();\n      const response = await apiCall.delete(\n        `bank`,\n        { transactionId: deleteData._id },\n        deleteData.bankid\n      );\n      msg = \"Deleted Successfully\";\n      dispatch(closeModal());\n      dispatch(setIsFetch());\n      notifier(msg, \"Success\");\n      closeConfirmModal();\n      setDeleteData({});\n    } catch (error) {\n      const errResponse = await error.json();\n      const msg = errResponse.msg;\n      notifier(msg, \"Error\");\n\n      closeConfirmModal();\n      setDeleteData({});\n    }\n  };\n  return (\n    <>\n      <ConfirmModal show={isConfirm}>\n        <div className=\"d-flex flex-column\">\n          {deleteData._id && (\n            <p className=\"text-center\">\n              Are you sure you want to delete this transaction with status :\n              <br />\n              Date : {deleteData.date.split(\"T\")[0]}\n              <br />\n              Type : {deleteData.transactionType}\n              <br />\n              Amount : Rs. {deleteData.amount}\n            </p>\n          )}\n          <div className=\"d-flex justify-content-end\">\n            <Buttons\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={closeConfirmModal}\n            >\n              <i className=\"fa fa-times mx-1 text-light\" aria-hidden=\"true\" />\n              No\n            </Buttons>\n            <Buttons className=\"mx-2\" variant=\"primary\">\n              <i\n                className=\"fa fa-check mx-1 text-light\"\n                aria-hidden=\"true\"\n                onClick={deleteDetails}\n              />\n              Yes\n            </Buttons>\n          </div>\n        </div>\n      </ConfirmModal>\n      <Modal title={isEdit ? \"Edit Detail\" : \"Add Detail\"}>\n        <AddDetailsForm\n          accountType={accountType}\n          isEdit={isEdit}\n          editData={isEdit ? editData : null}\n        />\n      </Modal>\n      <Container fluid className=\"bankDetailContainer\">\n        <Row className=\"sticky-header\">\n          <Col>\n            <BankDetailHeader\n              data={{ accountHolder, isActive, bankname }}\n              onAdd={onAdd}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div className=\"tableContent\">\n              <BankDetailBody\n                isActive={isActive}\n                onEdit={onEdit}\n                onDelete={onDelete}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nconst mapStateToProps = ({ bankReducer, globalReducer }) => ({\n  bankReducer,\n  globalReducer,\n});\nconst mapDispatchToProps = {\n  showModal,\n  closeModal,\n  setConfirmModal,\n  closeConfirmModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BankDetails);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport \"./button.scss\";\n\nconst Buttons = (props) => {\n  const { children, className, variant, icon, ...rest } = props;\n  return (\n    <Button\n      className={`${className} buttonDiv`}\n      disabled={props.disabled}\n      variant={variant}\n      {...rest}\n    >\n      {icon && (\n        <span>\n          <i className={icon}></i>\n        </span>\n      )}\n      {children}\n    </Button>\n  );\n};\nButtons.propTypes = {\n  size: PropTypes.string,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n};\nButtons.defaultProps = {\n  size: \"sm\",\n  type: \"button\",\n  variant: \"primary\",\n  disabled: false,\n};\n\nexport default Buttons;\n","let apiInstance = null;\n\nexport default class APICall {\n  post = async (url, data = {}, header = {}) => {\n    const response = await fetch(`${process.env.REACT_APP_LOCAL_BK}/${url}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(data),\n    });\n    if (response.ok) {\n      const responseJSON = await response.json();\n\n      return Promise.resolve(responseJSON);\n    } else {\n      return Promise.reject(response);\n    }\n  };\n  get = async (url, header = {}) => {\n    const response = await fetch(`${process.env.REACT_APP_LOCAL_BK}/${url}`, {\n      method: \"GET\",\n      header: {\n        \"content-type\": \"application/json\",\n      },\n    });\n    if (response.ok) {\n      const myHeader = new Headers();\n      myHeader.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      return Promise.reject(response);\n    }\n  };\n  delete = async (url, data, _id, header = {}) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_LOCAL_BK}/${url}/${_id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    if (response.ok) {\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      return Promise.reject(response);\n    }\n  };\n  put = async (url, data, _id, header = {}) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_LOCAL_BK}/${url}/${_id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    if (response.ok) {\n      const responseJSON = await response.json();\n      return Promise.resolve(responseJSON);\n    } else {\n      return Promise.reject(response);\n    }\n  };\n}\n\nexport function getAPIInstance() {\n  if (apiInstance === null) {\n    apiInstance = new APICall();\n  }\n  return apiInstance;\n}\n","import React from \"react\";\nimport { toastr } from \"react-redux-toastr\";\n\nfunction notifier(msg, color = \"success\") {\n  if (color.toLowerCase() === \"success\") {\n    toastr.success(msg);\n  } else if (color.toLowerCase() === \"error\") {\n    toastr.error(msg);\n  }\n}\n\nexport { notifier };\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./modal.scss\";\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"./../../../reducers/globalReducer\";\n\nfunction ModalCompnent({\n  globalReducer,\n  closeModal,\n  children,\n  title,\n  ...rest\n}) {\n  const { show } = globalReducer;\n  const handleClose = () => {\n    closeModal();\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        {title !== \"\" && <Modal.Title>{title}</Modal.Title>}\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n    </Modal>\n  );\n}\nModalCompnent.propTypes = {\n  title: PropTypes.string,\n};\nModalCompnent.defaultProps = {\n  title: \"\",\n};\nconst mapStateToProps = ({ globalReducer }) => ({\n  globalReducer,\n});\nconst mapDispatchToProps = {\n  closeModal,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalCompnent);\n","import { Modal } from \"react-bootstrap\";\nimport React from \"react\";\nimport { closeConfirmModal } from \"../../../reducers/globalReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction ConfirmModal({ show, children, title, ...rest }) {\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    dispatch(closeConfirmModal());\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title ? title : null}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"bg-light\">{children}</Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ConfirmModal;\n","import React, { useEffect, useState } from \"react\";\n\nfunction DateTime() {\n  const [dateTime, setDateTime] = useState({\n    date: new Date().toLocaleDateString(),\n    time: new Date().toLocaleTimeString(),\n  });\n  useEffect(() => {\n    const dateInterval = setInterval(() => {\n      setDateTime({\n        date: new Date().toLocaleDateString(),\n        time: new Date().toLocaleTimeString(),\n      });\n    }, 1000);\n    return () => {\n      clearInterval(dateInterval);\n    };\n  }, [dateTime]);\n  return (\n    <div>\n      <span className=\"mx-2\">\n        <i className=\"fa fa-clock\" />\n        {dateTime.time}\n      </span>\n      <span className=\"mx-2\">\n        <i className=\"fa fa-calendar \" />\n        {dateTime.date}\n      </span>\n    </div>\n  );\n}\n\nexport default DateTime;\n","import React, { useEffect, useState } from \"react\";\nimport Buttons from \"../Button\";\nimport DateTime from \"../DateTime\";\nimport \"./index.scss\";\nimport { setIsFetch } from \"./../../../reducers/bankReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction SubHeader(props) {\n  const dispatch = useDispatch();\n  const [isHamBurActive, setIsHamBurActive] = useState(false);\n  const [Screen, setScreen] = useState(window.screen.width);\n  const toggleHamburger = () => {\n    setIsHamBurActive(!isHamBurActive);\n  };\n  const refresh = () => {\n    dispatch(setIsFetch());\n  };\n  useEffect(() => {\n    return () => {\n      window.removeEventListener(\"resize\", setIsHamBurActive(false));\n    };\n  }, []);\n  window.addEventListener(\"resize\", () => {\n    setScreen(window.screen.width);\n  });\n  return (\n    <div className=\"sub-header\">\n      <div className=\"leftEnd\">\n        <Buttons onClick={refresh}>Refresh</Buttons>\n      </div>\n      <div className=\"hamburger\">\n        <i\n          className={isHamBurActive ? \"fas fa-times\" : \"fas fa-bars\"}\n          onClick={toggleHamburger}\n        />\n      </div>\n      <div\n        className={`${\n          Screen < 768 ? (isHamBurActive ? \"d-flex\" : \"d-none\") : \"\"\n        } rightEnd`}\n      >\n        {props.children}\n        <DateTime />\n      </div>\n    </div>\n  );\n}\n\nexport default SubHeader;\n"],"sourceRoot":""}