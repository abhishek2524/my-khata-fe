{"version":3,"sources":["components/common/Header/index.jsx","reducers/globalReducer.js","reducers/bankReducer.js","components/common/Footer/index.jsx","reportWebVitals.js","reducers/index.js","store.js","components/common/PageLoader/index.jsx","routes.jsx","components/common/404NotFound/index.jsx","index.js"],"names":["HeaderComponent","className","initState","isLoading","isConfirm","show","globalReducer","createSlice","name","initialState","reducers","setLoader","state","action","stopLoader","setInit","setConfirmModal","closeConfirmModal","showModal","closeModal","actions","bankReducer","data","fetchData","setIsFetch","clearIsFetch","FooterComponent","year","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","history","combineReducers","router","connectRouter","toastr","toastrReducer","createBrowserHistory","store","configureStore","reducer","PageLoader","ProgressBar","animated","variant","now","max","LoadingComponent","BankComponent","loadable","fallback","BankDetailComponent","Login","PrivateRoute","connect","props","Component","component","rest","localStorage","getItem","render","timeOut","newestOnTop","preventDuplicates","position","getState","transitionIn","transitionOut","progressBar","closeOnToastrClick","Header","Footer","to","process","exact","path","ReactDOM","routes","document","getElementById"],"mappings":"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","file":"static/js/main.7497602f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.scss\";\n\nconst HeaderComponent = () => {\n  return (\n    <header>\n      <div className=\"headerDiv\">KhataApp</div>\n    </header>\n  );\n};\n\nexport default HeaderComponent;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst initState = {\n  isLoading: false,\n  isConfirm: false,\n  show: false,\n};\nconst globalReducer = createSlice({\n  name: \"bank\",\n  initialState: initState,\n  reducers: {\n    setLoader(state, action) {\n      state.isLoading = true;\n    },\n    stopLoader(state) {\n      state.isLoading = false;\n    },\n    setInit(state) {\n      return { ...state, initState };\n    },\n    setConfirmModal(state) {\n      state.isConfirm = true;\n    },\n    closeConfirmModal(state) {\n      state.isConfirm = false;\n    },\n    showModal(state, action) {\n      state.show = true;\n    },\n    closeModal(state, action) {\n      state.show = false;\n    },\n  },\n});\n\nexport const {\n  setLoader,\n  stopLoader,\n  setInit,\n  setConfirmModal,\n  closeConfirmModal,\n  showModal,\n  closeModal,\n} = globalReducer.actions;\nexport default globalReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initState = {\n  data: [],\n  fetchData: false,\n};\nconst bankReducer = createSlice({\n  name: \"bankData\",\n  initialState: initState,\n  reducers: {\n    setIsFetch(state, action) {\n      state.fetchData = true;\n    },\n    clearIsFetch(state, action) {\n      state.fetchData = false;\n    },\n  },\n});\nexport const { setIsFetch, clearIsFetch } = bankReducer.actions;\n\nexport default bankReducer.reducer;\n","import React from \"react\";\nimport \"./footer.scss\";\n\nfunction FooterComponent() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <div className=\"footerDiv\">MyKhataApp&copy; {year}</div>\n    </footer>\n  );\n}\n\nexport default FooterComponent;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { connectRouter } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport globalReducer from \"./globalReducer\";\nimport bankReducer from \"./bankReducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nconst rootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    toastr: toastrReducer,\n    bankReducer,\n    globalReducer,\n  });\n\nexport default rootReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createBrowserHistory } from \"history\";\nimport rootReducer from \"./reducers\";\n\nexport const history = createBrowserHistory();\n\nconst store = configureStore({\n  reducer: rootReducer(history),\n});\n\nexport default store;\n","import React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport \"./loader.scss\";\n\nexport const PageLoader = () => {\n  return (\n    <div>\n      <ProgressBar\n        animated\n        variant=\"danger\"\n        now=\"100\"\n        max=\"100\"\n        className=\"loader\"\n      />\n    </div>\n  );\n};\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\nimport { PageLoader } from \"./components/common/PageLoader\";\nimport { notFound } from \"./components/common/404NotFound\";\nimport HeaderComponent from \"./components/common/Header\";\nimport FooterComponent from \"./components/common/Footer\";\nimport { connect } from \"react-redux\";\n\nimport ReduxToastr from \"react-redux-toastr\";\nimport { useState, useEffect } from \"react\";\n\nconst LoadingComponent = () => {\n  return <PageLoader />;\n};\n\nconst BankComponent = loadable(() => import(\"./components/Banks\"), {\n  fallback: <LoadingComponent />,\n});\n\nconst BankDetailComponent = loadable(() => import(\"./components/BankDetails\"), {\n  fallback: <LoadingComponent />,\n});\n\nconst Login = loadable(() => import(\"./components/Login\"), {\n  fallback: <LoadingComponent />,\n});\n\nconst PrivateRouteComponent = (props) => {\n  const { component: Component, globalReducer, ...rest } = props;\n\n  return (\n    <>\n      {localStorage.getItem(\"loggedInUser\") ? (\n        <Route\n          {...rest}\n          render={(props) => (\n            <>\n              <ReduxToastr\n                timeOut={1000}\n                newestOnTop={false}\n                preventDuplicates\n                position=\"top-center\"\n                getState={(state) => state.toastr} // This is the default\n                transitionIn=\"fadeIn\"\n                transitionOut=\"fadeOut\"\n                progressBar\n                closeOnToastrClick\n              />\n              <div className=\"container-fluid main m-0 p-0\">\n                <HeaderComponent />\n                {globalReducer.isLoading && <LoadingComponent />}\n                <Component {...props} />\n                <FooterComponent />\n              </div>\n            </>\n          )}\n        />\n      ) : (\n        <Redirect to={`${process.env.PUBLIC_URL}/login`} />\n      )}\n    </>\n  );\n};\nconst mapStateToProps = ({ globalReducer }) => ({\n  globalReducer,\n});\n\nconst PrivateRoute = connect(mapStateToProps, null)(PrivateRouteComponent);\n\nexport default (\n  <div>\n    <Switch>\n      {/* <Route\n        exact\n        path={`${process.env.PUBLIC_URL}/`}\n        component={(props) => <Header {...props} />}\n      /> */}\n      <PrivateRoute\n        exact\n        path={`${process.env.PUBLIC_URL}/try`}\n        component={HeaderComponent}\n      />\n      <PrivateRoute\n        exact\n        path={`${process.env.PUBLIC_URL}/account-detail/:bankid`}\n        component={BankDetailComponent}\n      />\n      <PrivateRoute\n        exact\n        path={`${process.env.PUBLIC_URL}/`}\n        component={BankComponent}\n      />\n      <Route exact path={`${process.env.PUBLIC_URL}/login`} component={Login} />\n      <Route path=\"*\" component={notFound} />\n    </Switch>\n  </div>\n);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const notFound = () => {\n  return (\n    <div>\n      Oops! Seems like you are misdirected\n      <NavLink to={`/${process.env.REACT_APP_BASE}/`}>Go to home</NavLink>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store, { history } from \"./store\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport routes from \"./routes\";\nimport \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  // <BrowserRouter>\n  <Provider store={store}>\n    <ConnectedRouter history={history}>{routes}</ConnectedRouter>\n  </Provider>,\n  // </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}